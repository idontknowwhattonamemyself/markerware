local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Markerware", HidePremium = false, SaveConfig = true, ConfigFolder = "Mware"})
game:GetService("RunService").Heartbeat:Connect(function()

for i, v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v.Name == "DisableSpamJump_l" or v.Name == "AnticheatNotifications_l" then 
     v:remove()
    end
end
end)


local ac = false
local Tab = Window:MakeTab({
    Name = "Automation",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
Tab:AddToggle({
    Name = "Auto Click",
    Default = false,
    Callback = function(Value)
ac = Value
    end    
})
Tab:AddButton({
	Name = "Spin (400 clicks)",
	Callback = function()
        local args = {
            [1] = false
        }
        
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Title.UseSpinner:InvokeServer(unpack(args))        
  	end    
})

Tab:AddButton({
	Name = "Menu",
	Callback = function()
        local args = {
            [1] = false
        }
        
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Title.ReturnToTitleScreen:InvokeServer()
    
  	end    
})
Tab:AddButton({
	Name = "UnMenu",
	Callback = function()
        local args = {
            [1] = false
        }
        
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Title.PlayGame:InvokeServer()    
  	end    
})
Tab:AddButton({
	Name = "Inf Ammo",
	Callback = function()
      local mt = getrawmetatable(game)
local __oldIndex = mt.__index
local __oldNewIndex = mt.__newindex

if setreadonly then setreadonly(mt, false) else make_writeable(mt) end

mt.__index = newcclosure(function(a, k)
    if not checkcaller() then
        if tostring(a) == "CurrentAmmo" then
            if k == "Value" then
                return math.huge;
            end
        end
    end
    return __oldIndex(a, k)
end)   
  	end    
})
Tab:AddSlider({
    Name = "Walkspeed",
    Min = 16,
    Max = 32,
    Default = 5,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Walkspeed",
    Callback = function(Value)
        if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Humanoid then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Value
            end
    end    
})
game:GetService("RunService").Heartbeat:Connect(function()
    if ac == true and game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Capture.DecreaseClicksLeft then
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Capture.DecreaseClicksLeft:InvokeServer()

        end
    end)
