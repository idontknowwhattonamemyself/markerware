local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Markerware", HidePremium = false, SaveConfig = true, ConfigFolder = "Mware"})

local Players = game:GetService("Players")
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(Self, ...)
    local NameCallMethod = getnamecallmethod()

    if tostring(string.lower(NameCallMethod)) == "kick" then
        if getgenv().SendNotifications == true then
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Exunys Developer",
                Text = "You almost got kicked! Successfully prevented.",
                Icon = "rbxassetid://6238540373",
                Duration = 3,
            })
        end
        
        return nil
    end
    
    return OldNameCall(Self, ...)
end)

local ac = false
local Tab = Window:MakeTab({
    Name = "Automation",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
Tab:AddToggle({
    Name = "Auto Click",
    Default = false,
    Callback = function(Value)
ac = Value
    end    
})
Tab:AddButton({
	Name = "Spin (400 clicks)",
	Callback = function()
        local args = {
            [1] = false
        }
        
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Title.UseSpinner:InvokeServer(unpack(args))        
  	end    
})
Tab:AddButton({
	Name = "Menu",
	Callback = function()
        local args = {
            [1] = false
        }
        
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Title.UseSpinner:InvokeServer(unpack(args))        
  	end    
})
Tab:AddButton({
	Name = "Menu",
	Callback = function()
        local args = {
            [1] = false
        }
        
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Title.ReturnToTitleScreen:InvokeServer()
    
  	end    
})
Tab:AddButton({
	Name = "UnMenu",
	Callback = function()
        local args = {
            [1] = false
        }
        
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Title.PlayGame:InvokeServer()    
  	end    
})
Tab:AddSlider({
    Name = "Walkspeed",
    Min = 16,
    Max = 32,
    Default = 5,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Walkspeed",
    Callback = function(Value)
        if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Humanoid then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Value
            end
    end    
})
game:GetService("RunService").Heartbeat:Connect(function()
    if ac == true and game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Capture.DecreaseClicksLeft then
        game:GetService("ReplicatedStorage").RemoteCalls.GameSpecific.Capture.DecreaseClicksLeft:InvokeServer()

        end
    end)
